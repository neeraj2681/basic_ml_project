name: "aws_docker_image_push and run"

on:
  push:
    branches:
      - main  

jobs:
  Continuous_Integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      

      - name: Build, tag and push Docker image to ECR Public
        id: build-image
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest

        run: |
          docker build -f Dockerfile.combined -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image_uri::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  Continuous_Deployment:
    runs-on: self-hosted
    needs: Continuous_Integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Delete existing docker image and Pull Docker image from ECR Public and run it
        id: pull-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest

        run: |
          echo "Deleting existing docker image"
          docker rmi -f $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Pulling new docker image from ECR Public"
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Running docker image"
          docker run -d -p 8000:8000 -p 8501:8501 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          

          